Instructions for VAMPS update

General comments:
Run commands on jake, taiga, or tern and use 'top' to check activity of the machine.
The "time" command is used to report the actual run time for various steps.
Create a "mail_done" alias in your .bash_profile:
alias mail_done='echo "The `echo $STY` screen on `hostname` is done with its job." | mail -s "screen on `hostname`" morrison@mbl.edu'
"mail_done" will send you an email when the command from a screen session is finished.

Do 01-04 sequentially, but you can start 07 simultaneously with 04 on a different server.

Use 'screen' session.
If you want a screen log, use "screen -L" flag.  The log will end up in the directory where you issue the screen command.  
If you are running multiple sessions in the same directory, the log will have output from both.

01) If there has been any change to 454 projects (datasets renamed, regasting, etc.), do steps 01 through 04:

Upload 454 data into vampsdb *transfer tables

cd /xraid2-2/g454/vamps/tovamps/; mkdir `date '+%Y%m%d'`; cd `date '+%Y%m%d'`; time run_vamps_upload; mail_done 

Estimated time: 15 hrs or longer
This creates a working directory named [current date] in the 'tovamps' directory, changes into it, 
and uploads 454 data from env454 database to a temporary table in the vamps database.

02) Check that the upload completed successfully:
  a) Look at the "check_vamps_upload.log" file.  The number of files should equal number of rows in the corresponding table.
  b) If not, redo what's needed, run the command "check_vamps_upload_transfer.pl -t" to check again
        If the numbers differ, it is likely because the connection dropped or some other communication error happened
  c) check all transfer tables visually in SequelPro.  Look at *transfer tables.

03) Rename the "*transfer" tables to "*intermediate":
    time swap_table_names.py 454
    
04) Dump the intermediate tables to a file on the server:

cd /xraid2-2/g454/vamps/tovamps/; module load mysql/5.6.12; time mysqldump -h vampsdb vamps new_class_intermediate new_contact_intermediate new_dataset_intermediate new_family_intermediate new_genus_intermediate new_orderx_intermediate new_phylum_intermediate new_project_dataset_intermediate new_project_intermediate new_species_intermediate new_strain_intermediate new_summed_data_cube_intermediate new_superkingdom_intermediate new_taxon_string_intermediate new_taxonomy_intermediate new_user_contact_intermediate new_user_intermediate vamps_data_cube_intermediate vamps_export_intermediate vamps_junk_data_cube_intermediate vamps_projects_datasets_intermediate vamps_projects_info_intermediate vamps_sequences_intermediate vamps_taxonomy_intermediate | gzip > vamps_prod.intermediate_from_454.`date '+%m%d%y'`.sql.gz; mail_done

Estimated time: 1 h

This command does an SQL dump of the *intermediate tables content to a file on server (the tables contain only 454 data at this point).  

05) If there are only Illumina data changes, restore the 454 data from the existing dump file, e.g. vamps_prod.intermediate_from_454.031815.sql.gz

cd /xraid2-2/g454/vamps/tovamps/; FILE_NAME=`ls | grep -o vamps_prod.intermediate_from_454.*.sql.gz`; time gunzip < $FILE_NAME | mysql -h vampsdb vamps; mail_done

Estimated time: 4.5 h
Warning: The command line will work correctly only if there is only one file with such name. Remove or rename all previous ones.

This string of commands just finds the dump file's name and assigns it to the variable "FILE_NAME".  
If you know the file name, you can put it into the mysql command without using a variable.

06) Check if the vamps tables look ok (if not done in step 2c).  
    Look at *transfer tables.

07) Upload Illumina data

    create an "ill" dir under the working directory and change into if you started at 01 (if there was a 454 update)
        cd /xraid2-2/g454/vamps/tovamps/`date '+%Y%m%d'`; mkdir ill; cd ill # if 454 data and illumina data
    or else create both directories at this time
        cd /xraid2-2/g454/vamps/tovamps/; mkdir `date '+%Y%m%d'`; cd `date '+%Y%m%d'`; mkdir ill; cd ill (if only illumina data have been added)

    now upload the Illumimina data to vamps db, into *transfer and *ill tables. This is similar to step 01, but for Illumina.
    time run_vamps_upload_ill; mail_done 

Estimated time: 22 h

08) Check that the upload completed successfully:
    Look at *intermediate, *transfer, *ill vampsdb tables using SequelPro. 
    The *intermediate should not have changed  
    *transfer and *ill will have been recreated
    all *_ill should have content 

09) Add Illumina data to 454 in vampsdb tables
    time swap_table_names.py ill; mail_done 
    This adds contents of the transfer and ill tables to intermediate tables.  
    It is similar to 03, but data are added to the existing intermediate table; it is not overwritten. 

Estimated time: 14 h

10) Check to see that the entire process completed successfully
    a) repeat 02c visual check, look at *intermediate, *transfer, *ill vampsdb tables using SequelPro. 
    b) run "python /xraid/bioware/linux/seqinfo/bin/vamps_upload_util/compare_interm_w_current.py"
        This checks table sizes.  If anything has been added, the new table size should be same or bigger than current version.  
    
10a) Change the front page of VAMPS site
    vim /usr/local/www/vamps/docs/includes/notice.html to uncomment the yellow notice (only Andy or Anya can do this; skip this step)

11) Rename the current tables to 'previous' version and *intermediate tables to 'current'.
    time swap_table_names.py rename; mail_done 

12) Look at the new projects in VAMPS.  Check heat maps, tax tables.  Do they look reasonable?

12a) If you skipped step 10b, run another check on the numbers
    python /xraid/bioware/linux/seqinfo/bin/vamps_upload_util/compare_res_w_previous.py  
    "res" = results (current). 
    
Congratulations--you are done with the update.  Notify the investigators whose projects have been added or updated!

Some errors from log files.

1) Error: Cannot add or update a child row: a foreign key constraint fails (`vamps`.`#sql-be5_a36aa`, CONSTRAINT `#sql-be5_a36aa_ibfk_1` FOREIGN KEY (`project_id`) REFERENCES `new_project_transfer` (`project_id`))

One of tables was corrupted, ask Anya to investigate or rerun vamps upload.

2) Error: Lost connection to MySQL server during query
   Error: Table 'env454.vamps_sequences_transfer_temp' doesn't exist (Tue Mar 18 12:28:17 2014)

Because of the losted connection the table wasn't created and all further steps didn't work.
Rerun vamps upload or just the last step (e.g. run_vamps_upload_ill) if there was no table renaming yet.
