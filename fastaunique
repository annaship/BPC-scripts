#! python
# -*- coding: utf-8 -*-

#
# Questions and concerns: A. Murat Eren <meren@mbl.edu>
#

import sys
import IlluminaUtils.lib.fastalib as u

def main(args):
    try:
        input = u.SequenceSource(args.input_fasta, unique = True)
    except IOError:
        print('Error: File does not exist, or you do not have the right permissions to read it: "%s"'\
                    % args.input_fasta)
        sys.exit(-1)

    if args.output_fasta:
        output_file_path = args.output_fasta
    else:
        output_file_path = args.input_fasta + '.unique'
    
    try:
        output = u.FastaOutput(output_file_path)
    except IOError:
        print('Error: You have no permission to write destination: "%s"'\
                    % output_file_path)
        sys.exit(-1)

    if args.names_file:
        names_file_path = args.names_file
    else:
        names_file_path = output_file_path + '.names'

    try:
        names = open(names_file_path, 'w')
    except IOError:
        print('Error: You have no permission to write destination: "%s"'\
                    % names_file_path)
        sys.exit(-1)

    
    while next(input):
        if args.dont_truncate_sequences:
            if args.dont_include_frequencies:
                output.store(input, split = False, store_frequencies = False)
            else:
                output.store(input, split = False)
        else:
            if args.dont_include_frequencies:
                output.store(input, store_frequencies = False)
            else:
                output.store(input)
        names.write('%s\t%s\n' % (input.id, ','.join(input.ids)))
    output.close()

if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description='Unique sequences in a FASTA file')
    parser.add_argument('input_fasta', metavar = 'INPUT_FASTA',
                            help = 'Sequences file in FASTA format')
    parser.add_argument('-o', '--output-fasta', metavar = 'OUTPUT_FASTA', default = None,
                            help = 'FASTA file to store unique sequences')
    parser.add_argument('-n', '--names-file', metavar = 'NAMES_FILE', default = None,
                            help = 'File to store names (headers) of duplicate sequences.')
    parser.add_argument('-t', '--dont-truncate-sequences', action = 'store_true', default = False,
                            help = 'When present, sequences would not be truncated into multiple lines when creating FASTA')
    parser.add_argument('-f', '--dont-include-frequencies', action = 'store_true', default = False,
                            help = 'When present, sequence frequencies would not appear in the defline')

    args = parser.parse_args()
    main(args)
